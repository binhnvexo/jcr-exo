commit 7ad13154ab82e342ed2df3886609e003eec257c3
Author: BinhNV <binhnv@exoplatform.com>
Date:   Fri Jul 13 19:04:30 2012 +0700

    add

diff --git a/src/main/java/exoplatform/BookNodeTypes.java b/src/main/java/exoplatform/BookNodeTypes.java
index 1cc8a6a..058d142 100644
--- a/src/main/java/exoplatform/BookNodeTypes.java
+++ b/src/main/java/exoplatform/BookNodeTypes.java
@@ -32,6 +32,8 @@ public interface BookNodeTypes {
   public static final String EXO_BOOK_CATEGORY = "exostore:bookcategory";
   /* exostore:bookcontent is a property of exostore:book */
   public static final String EXO_BOOK_CONTENT = "exostore:bookcontent";
+  /* exostore:bookcontent is a property of exostore:book */
+  public static final String EXO_BOOK_AUTHOR = "exostore:author";
   
   /* define parent node of author */
   public static final String EXO_AUTHOR = "exostore:author";
diff --git a/src/main/java/exoplatform/BookStoreService.java b/src/main/java/exoplatform/BookStoreService.java
index 8e45abd..0b117f7 100644
--- a/src/main/java/exoplatform/BookStoreService.java
+++ b/src/main/java/exoplatform/BookStoreService.java
@@ -19,6 +19,7 @@ package exoplatform;
 import java.io.Serializable;
 import java.util.List;
 
+import javax.jcr.Node;
 import javax.jcr.RepositoryException;
 
 import org.exoplatform.services.cache.CacheService;
@@ -70,14 +71,15 @@ public class BookStoreService implements Startable {
   public void start() {
     jcrDataStorage.init();
 //    List<Book> books = new ArrayList<Book>(); 
-//    try {
-//      addBook("The Mask", CATEGORY.NOVEL, "Test");
-//    } catch (DuplicateBookException e) {
-//      // TODO Auto-generated catch block
-//      e.printStackTrace();
-//    }
-    addMultiBook();
-    addMultiAuthor();
+    try {
+      Node authorNode = addAuthor("Conan Doyle", "England", "123456789");
+      addBook("The Mask", CATEGORY.NOVEL, "Test", authorNode);
+    } catch (DuplicateBookException e) {
+      // TODO Auto-generated catch block
+      e.printStackTrace();
+    }
+//    addMultiBook();
+//    addMultiAuthor();
 //    books = searchBookByNameLikeXPath("Holme");
 //    if (books != null && books.size() > 0) {
 //      for (Book book : books) {
@@ -107,9 +109,9 @@ public class BookStoreService implements Startable {
    * @return
    * @throws DuplicateBookException
    */
-  public Book addBook(String bookName, CATEGORY category, String content) throws DuplicateBookException {
+  public Book addBook(String bookName, CATEGORY category, String content, Node node) throws DuplicateBookException {
     Book book = new Book(bookName, category, content);
-    return jcrDataStorage.addBook(book);
+    return jcrDataStorage.addBook(book, node);
   }
   
   /**
@@ -119,7 +121,7 @@ public class BookStoreService implements Startable {
    * @param authorPhone
    * @return
    */
-  public Author addAuthor(String authorName, String authorAddress, String authorPhone) {
+  public Node addAuthor(String authorName, String authorAddress, String authorPhone) {
     Author author = new Author(authorName, authorAddress, authorPhone);
     return jcrDataStorage.addAuthor(author);
   }
@@ -140,16 +142,16 @@ public class BookStoreService implements Startable {
    * This function support for add multi book to datastorage
    */
   public void addMultiBook() {
-    try {
-      addBook("Shelock Holme", CATEGORY.NOVEL, "The sign of the Four");
-      addBook("Alice in wonder land", CATEGORY.COMICS, "Alice in wonder land");
-      addBook("Seal team six", CATEGORY.NOVEL, "Seal team six");
-      addBook("Hibernate in action", CATEGORY.TECHNICAL, "Hibernate");
-      addBook("Napoleon", CATEGORY.HISTORY, "Napoleon");
-      addBook("Jouney to the West", CATEGORY.COMICS, "Jouney to the West");
-    } catch (DuplicateBookException de) {
-      log.error("Duplicate book", de);
-    }
+//    try {
+//      addBook("Shelock Holme", CATEGORY.NOVEL, "The sign of the Four");
+//      addBook("Alice in wonder land", CATEGORY.COMICS, "Alice in wonder land");
+//      addBook("Seal team six", CATEGORY.NOVEL, "Seal team six");
+//      addBook("Hibernate in action", CATEGORY.TECHNICAL, "Hibernate");
+//      addBook("Napoleon", CATEGORY.HISTORY, "Napoleon");
+//      addBook("Jouney to the West", CATEGORY.COMICS, "Jouney to the West");
+//    } catch (DuplicateBookException de) {
+//      log.error("Duplicate book", de);
+//    }
   } 
   
   /**
diff --git a/src/main/java/exoplatform/JCRDataStorage.java b/src/main/java/exoplatform/JCRDataStorage.java
index ef23941..e7fba58 100644
--- a/src/main/java/exoplatform/JCRDataStorage.java
+++ b/src/main/java/exoplatform/JCRDataStorage.java
@@ -147,10 +147,7 @@ public class JCRDataStorage {
    * @return Book
    * @throws DuplicateBookException
    */
-  public Book addBook(Book book) throws DuplicateBookException {
-    System.out.println("+ ========================================================================== +");
-    System.out.println("+                         add book function                                  +");
-    System.out.println("+ ========================================================================== +");
+  public Book addBook(Book book, Node node) throws DuplicateBookException {
     SessionProvider sProvider = SessionProvider.createSystemProvider();
     /* Check exist of book */
     if (isExistBookName(book.getName(), sProvider)) {
@@ -163,32 +160,24 @@ public class JCRDataStorage {
     try {
       /* execute set data to node and save to workspace */
       Node parentNode = getNodeByPath(DEFAULT_PARENT_PATH + DEFAULT_PARENT_BOOK_PATH, sProvider);
-      System.out.println("+ ========================================================================== +");
-      System.out.println("+                         " + parentNode.getPath() + "                       +");
-      System.out.println("+ ========================================================================== +");
       Node bookNode = parentNode.addNode("" + book.getId(), BookNodeTypes.EXO_BOOK);
       bookNode.setProperty(BookNodeTypes.EXO_BOOK_NAME, book.getName());
       bookNode.setProperty(BookNodeTypes.EXO_BOOK_CATEGORY, Utils.bookCategoryEnumToString(book.getCategory()));
       bookNode.setProperty(BookNodeTypes.EXO_BOOK_CONTENT, book.getContent());
+      bookNode.setProperty(BookNodeTypes.EXO_BOOK_AUTHOR, node);
       parentNode.getSession().save();
       return book;
     } catch (PathNotFoundException e) {
-      System.out.println("+ ========================================================================== +");
-      System.out.println("+                         Path not found exception                           +");
-      System.out.println("+ ========================================================================== +");
       return null;
     } catch (RepositoryException e) {
       log.error("Failed to add book", e);
-      System.out.println("+ ========================================================================== +");
-      System.out.println("+                              Repository exception                          +");
-      System.out.println("+ ========================================================================== +");
       return null;
     } finally {
       sProvider.close();
     }
   }
   
-  public Author addAuthor(Author author) {
+  public Node addAuthor(Author author) {
     SessionProvider sProvider = SessionProvider.createSystemProvider();
     author.setId(Utils.authorId++);
     try {
@@ -198,7 +187,7 @@ public class JCRDataStorage {
       authorNode.setProperty(BookNodeTypes.EXO_AUTHOR_ADDRESS, author.getAddress());
       authorNode.setProperty(BookNodeTypes.EXO_AUTHOR_PHONE, author.getPhone());
       parentNode.getSession().save();
-      return author;
+      return authorNode;
     } catch (RepositoryException re) {
       log.error("Failed to add author", re);
       return null;
diff --git a/src/main/resources/conf/portal/nodetypes.xml b/src/main/resources/conf/portal/nodetypes.xml
index 6f40180..fba444b 100644
--- a/src/main/resources/conf/portal/nodetypes.xml
+++ b/src/main/resources/conf/portal/nodetypes.xml
@@ -4,6 +4,7 @@
 	<nodeType name="exostore:book" isMixin="false" hasOrderableChildNodes="false" primaryItemName="">
 		<supertypes>
 			<supertype>nt:base</supertype>
+			<supertype>mix:referenceable</supertype>
 		</supertypes>
 		<propertyDefinitions>
 			<propertyDefinition name="exostore:bookname" requiredType="String" autoCreated="false" mandatory="false" 
@@ -18,12 +19,17 @@
 						onParentVersion="COPY" protected="false" multiple="false">
 				<valueConstraints/>
 			</propertyDefinition>
+			<propertyDefinition name="exostore:author" requiredType="Reference" autoCreated="false" mandatory="false" 
+			    		onParentVersion="COPY" protected="false" multiple="false">
+        		<valueConstraints/>
+      		</propertyDefinition>
 		</propertyDefinitions>
 	</nodeType>
 	
 	<nodeType name="exostore:author" isMixin="false" hasOrderableChildNodes="false" primaryItemName="">
 		<supertypes>
 			<supertype>nt:base</supertype>
+			<supertype>mix:referenceable</supertype>
 		</supertypes>
 		<propertyDefinitions>
 			<propertyDefinition name="exostore:authorname" requiredType="String" autoCreated="false" mandatory="false" 
diff --git a/target/classes/conf/portal/nodetypes.xml b/target/classes/conf/portal/nodetypes.xml
index 6f40180..fba444b 100644
--- a/target/classes/conf/portal/nodetypes.xml
+++ b/target/classes/conf/portal/nodetypes.xml
@@ -4,6 +4,7 @@
 	<nodeType name="exostore:book" isMixin="false" hasOrderableChildNodes="false" primaryItemName="">
 		<supertypes>
 			<supertype>nt:base</supertype>
+			<supertype>mix:referenceable</supertype>
 		</supertypes>
 		<propertyDefinitions>
 			<propertyDefinition name="exostore:bookname" requiredType="String" autoCreated="false" mandatory="false" 
@@ -18,12 +19,17 @@
 						onParentVersion="COPY" protected="false" multiple="false">
 				<valueConstraints/>
 			</propertyDefinition>
+			<propertyDefinition name="exostore:author" requiredType="Reference" autoCreated="false" mandatory="false" 
+			    		onParentVersion="COPY" protected="false" multiple="false">
+        		<valueConstraints/>
+      		</propertyDefinition>
 		</propertyDefinitions>
 	</nodeType>
 	
 	<nodeType name="exostore:author" isMixin="false" hasOrderableChildNodes="false" primaryItemName="">
 		<supertypes>
 			<supertype>nt:base</supertype>
+			<supertype>mix:referenceable</supertype>
 		</supertypes>
 		<propertyDefinitions>
 			<propertyDefinition name="exostore:authorname" requiredType="String" autoCreated="false" mandatory="false" 
diff --git a/target/classes/exoplatform/BookNodeTypes.class b/target/classes/exoplatform/BookNodeTypes.class
index 97e72a8..4f166ea 100644
Binary files a/target/classes/exoplatform/BookNodeTypes.class and b/target/classes/exoplatform/BookNodeTypes.class differ
diff --git a/target/classes/exoplatform/BookStoreService.class b/target/classes/exoplatform/BookStoreService.class
index a0ea9a7..effa12c 100644
Binary files a/target/classes/exoplatform/BookStoreService.class and b/target/classes/exoplatform/BookStoreService.class differ
diff --git a/target/classes/exoplatform/JCRDataStorage.class b/target/classes/exoplatform/JCRDataStorage.class
index 879d1a5..5d409f5 100644
Binary files a/target/classes/exoplatform/JCRDataStorage.class and b/target/classes/exoplatform/JCRDataStorage.class differ
diff --git a/target/jcr-exo-1.0-SNAPSHOT.jar b/target/jcr-exo-1.0-SNAPSHOT.jar
index 4da898f..848c9f8 100644
Binary files a/target/jcr-exo-1.0-SNAPSHOT.jar and b/target/jcr-exo-1.0-SNAPSHOT.jar differ
diff --git a/target/maven-archiver/pom.properties b/target/maven-archiver/pom.properties
index 9c401b4..dd69bd4 100644
--- a/target/maven-archiver/pom.properties
+++ b/target/maven-archiver/pom.properties
@@ -1,5 +1,5 @@
 #Generated by Maven
-#Fri Jul 13 14:57:28 ICT 2012
+#Fri Jul 13 18:56:27 ICT 2012
 version=1.0-SNAPSHOT
 groupId=exoplatform
 artifactId=jcr-exo
diff --git a/target/surefire-reports/TEST-exoplatform.AppTest.xml b/target/surefire-reports/TEST-exoplatform.AppTest.xml
index f731d34..c6bb568 100644
--- a/target/surefire-reports/TEST-exoplatform.AppTest.xml
+++ b/target/surefire-reports/TEST-exoplatform.AppTest.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8" ?>
-<testsuite failures="0" time="0.013" errors="0" skipped="0" tests="1" name="exoplatform.AppTest">
+<testsuite failures="0" time="0.019" errors="0" skipped="0" tests="1" name="exoplatform.AppTest">
   <properties>
     <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
     <property name="sun.boot.library.path" value="/home/binhnv/java/jdk1.6/jre/lib/amd64"/>
@@ -58,5 +58,5 @@
     <property name="sun.desktop" value="gnome"/>
     <property name="sun.cpu.isalist" value=""/>
   </properties>
-  <testcase time="0.002" classname="exoplatform.AppTest" name="testApp"/>
+  <testcase time="0.003" classname="exoplatform.AppTest" name="testApp"/>
 </testsuite>
\ No newline at end of file
diff --git a/target/surefire-reports/exoplatform.AppTest.txt b/target/surefire-reports/exoplatform.AppTest.txt
index 87ea500..8f1ce6d 100644
--- a/target/surefire-reports/exoplatform.AppTest.txt
+++ b/target/surefire-reports/exoplatform.AppTest.txt
@@ -1,4 +1,4 @@
 -------------------------------------------------------------------------------
 Test set: exoplatform.AppTest
 -------------------------------------------------------------------------------
-Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
